<?php
/**
* @file
* Use this module to learn about Drupal's menu system.
*/
/**
* Implementation of hook_menu().
*/
/*function menufun_menu() {
$items['menufun'] = array(
'title' => 'Greeting',
'title callback' => 'menufun_title',
'description' => 'A salutation.',
'page callback' => 'menufun_greeting',
'file' => 'menufun_greeting.inc',
'page arguments' => array('Jane', 'Doe'),
//'access callback' => TRUE,
'access callback' => 'user_access',
'access arguments' => array('receive greeting'),
'type' => MENU_NORMAL_ITEM,
'weight' => 5,
);
$items['menufun/farewell'] = array(
'title' => 'Farewell',
'page callback' => 'menufun_farewell',
'file' => 'menufun_greeting.inc',
//'access callback' => TRUE,
'type' => MENU_NORMAL_ITEM,
'access callback' => 'user_access',
'access arguments' => array('receive greeting'),
);
return $items;
}*/
/*
// menufun function wildcard
function menufun_menu() {
$items['menufun/%'] = array(
'title' => 'Hi',
'page callback' => 'menufun_hello',
'page arguments' => array(1),
'access callback' => TRUE,
'type' => MENU_NORMAL_ITEM,

);
return $items;
}*/
/*
function menufun_hello() {
return t('Hello! wildcard');
}
*/
// use the value of wildcard
/*function menufun_menu() {
$items['menufun/%/bar/baz'] = array(
'title' => 'Hi',
'page callback' => 'menufun_hello',
'page arguments' => array(1), // The matched wildcard.
'access callback' => TRUE,
);
return $items;
}*/
/**
* Page callback.
*/
/*function menufun_hello($name = NULL) {
return t('Hello. $name is @name', array('@name' => $name));
}*/
/**
* Page callback.
*/
/*function menufun_hello() {
return t('Hello!');
}*/

/*function menufun_hello($first_name = '', $last_name = '') {
return t('Hello external $first_name is @first_name and $last_name is @last_name', array('@first_name' => $first_name, '@last_name' => $last_name));
}*/

// implemting permissions 
/**
* Implementation of hook_permission()
*/
function menufun_permission() {
return array(
'receive greeting' => array(
'title' => t('Receive a greeting'),
'description' => t('Allow users receive a greeting message'),
),
);
}
/**
* Title callback.
*/
function menufun_title() {
drupal_set_title(t('The page title'));	
$now = format_date(time());
return t('It is now @time', array('@time' => $now));
}

// building menu from wildcard path using to arg
function menufun_menu() {
$items['menufun/%a_zoo_animal'] = array(
'title' => 'Hi',
'page callback' => 'menufun_hello',
'page arguments' => array(1),
'access callback' => TRUE,
'type' => MENU_NORMAL_ITEM,
'weight' => -5
);
return $items;
}
function menufun_hello($animal) {
//return t('Hello $animal ');
//return $animal;
return t('the animal name  is @animal', array('@animal' => $animal));
}

function a_zoo_animal_to_arg($arg) {
// $arg is '%' since it is a wildcard
// Let's replace it with a zoo animal.
return $arg;
//return 'tiger';
}

/**
* Implementation of hook_menu_alter().
*
* @param array $items
* Menu items keyed by path.
*/
function menufun_menu_alter(&$items) {
// Replace the page callback to 'user_logout' with a call to
// our own page callback.
$items['logout']['page callback'] = 'menufun_user_logout';
$items['logout']['access callback'] = 'user_is_logged_in';
// Drupal no longer has to load the user.pages.inc file
// since it will be calling our menufun_user_logout(), which
// is in our module -- and that's already in scope.
unset($items['logout']['file']);
}
/**
* Menu callback; logs the current user out, and redirects to drupal.org.
* This is a modified version of user_logout().
*/
function menufun_user_logout() {
global $user;
watchdog('menufun', 'Session closed for %name.', array('%name' => $user->name));
// Destroy the current session:
session_destroy();
// Run the 'logout' operation of the user hook so modules can respond
// to the logout if they want to.
module_invoke_all('user', 'logout', NULL, $user);
// Load the anonymous user so the global $user object will be correct
// on any hook_exit() implementations.
$user = drupal_anonymous_user();
drupal_goto('http://drupal.org/');
}

/**
* Implements hook_menu_link_alter().
*
* @param $item
* Associative array defining a menu link as passed into menu_link_save()
*/
function menufun_menu_link_alter(&$item) {
if ($item['link_path'] == 'user/logout') {
$item['link_title'] = 'Sign off';
}
}