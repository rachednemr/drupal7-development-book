<?php
/**
* @file
* Lets users add private annotations to nodes.
*
* Adds a text field when a node is displayed
* so that authenticated users may make notes.
*/
/**
* Implementation of hook_menu().
*/
function annotate_menu() {
$items['admin/config/annotate'] = array(
'title' => 'Node annotation',
'description' => 'Adjust node annotation options.',
'position' => 'right',
'weight' => -5,
'page callback' => 'system_admin_menu_block_page',
'access arguments' => array('administer site configuration'),
'file' => 'system.admin.inc',
'file path' => drupal_get_path('module', 'system'),
);
$items['admin/config/annotate/settings'] = array(
'title' => 'Annotation settings',
'description' => 'Change how annotations behave.',
'page callback' => 'drupal_get_form',
'page arguments' => array('annotate_admin_settings'),
'access arguments' => array('administer site configuration'),
'type' => MENU_NORMAL_ITEM,
'file' => 'annotate.admin.inc',
);
return $items;
}

/**
* Process annotation settings submission.
*/

function annotate_admin_settings_submit($form, $form_state) {
// Loop through each of the content type checkboxes shown on the form.
foreach ($form_state['values']['annotate_node_types'] as $key => $value) {
// If the check box for a content type is unchecked, look to see whether
// this content type has the annotation field attached to it using the
// field_info_instance function. If it does then we need to remove the
// annotation field as the administrator has unchecked the box.
if (!$value) {
$instance = field_info_instance('node', 'annotation', $key);
if (!empty($instance)) {
field_delete_instance($instance);
watchdog("Annotation", 'Deleted annotation field from content type:
%key', array('%key' => $key));
}
} else {
// If the check box for a content type is checked, look to see whether
// the field is associated with that content type. If not then add the
// annotation field to the content type.
$instance = field_info_instance('node', 'annotation', $key);
if (empty($instance)) {
$instance = array(
'field_name' => 'annotation',
'entity_type' => 'node',
'bundle' => $key,
'label' => t('Annotation'),
'widget_type' => 'text_textarea_with_summary',
'settings' => array('display_summary' => TRUE),
'display' => array(
'default' => array(
'type' => 'text_default',
),
'teaser' => array(
'type' => 'text_summary_or_trimmed',
),
),
);
$instance = field_create_instance($instance);
watchdog('Annotation', 'Added annotation field to content type: %key',
array('%key' => $key));
}
}
} // End foreach loop.
}
/**
* Implementation of hook_trigger_info().
*/
function annotate_trigger_info() {
return array(
'annotate' => array(
'annotate_insert' => array(
'label' => t('After saving new annotations'),
),
'annotate_update' => array(
'label' => t('After saving updated annotations'),
),
'annotate_delete' => array(
'label' => t('After deleting annotations'),
),
'annotate_view' => array(
'label' => t('When annotation is viewed by an authenticated user'),
),
),
);
}